Given a valid (IPv4) IP address, return a defanged version of that IP address.

A defanged IP address replaces every period "." with "[.]".

 

Example 1:

Input: address = "1.1.1.1"
Output: "1[.]1[.]1[.]1"
Example 2:

Input: address = "255.100.50.0"
Output: "255[.]100[.]50[.]0"
 

Constraints:

The given address is a valid IPv4 address.

C++ Solution:

class Solution {
public:
    string defangIPaddr(string address) {
      string ans="";
        for(auto i:address)
        {
            if(i=='.')
            {
                ans+="[.]";
            }
            else
            {
                ans+=i;
            }
        }
        return ans;
    }
};

Python Solution:

class Solution:
    def defangIPaddr(self, address: str) -> str:
        # ans=""
        # for i in address:
        #     if(i=='.'):
        #         ans+="[.]"
        #     else:
        #         ans+=i
        # return ans
        #another approach using replace
        # return address.replace('.','[.]')
        # import re
        # address =  re.sub('\\.','[.]',address)
        # return address
