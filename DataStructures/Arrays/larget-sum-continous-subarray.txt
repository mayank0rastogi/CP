/******************************************************************************


largest sum-continous subarray
*******************************************************************************/
#include <bits/stdc++.h>
using namespace std;
/*
int  max_subarray(int a[],int n)
{
  int max_so_far=a[0];
  int curr=a[0];
   for(int i=1;i<n-1;i++)
   {
       curr=max(a[i],curr+a[i]);
       max_so_far=max(max_so_far,curr);
   }
  return max_so_far;
}*/

int  max_subarray(int a[],int n)
{
  int max_so_far=INT_MIN;
  int curr_max=0;
   for(int i=0;i<n-1;i++)
   {
       curr_max=curr_max+a[i];
       if(max_so_far<curr_max)
       {
           max_so_far=curr_max;
           
       }
       if(curr_max<0)
       {
           curr_max=0;
       }
   }
  return max_so_far;
}

int main()
{
   //int a[] = {1 ,-1 ,-3 , 7, 5, 11, -2 , 6 }; 
   int a[]={-2, -3, 4, -1, -2, 1, 5, -3};
    int n = sizeof(a)/sizeof(a[0]); 
  cout<<max_subarray(a,n);
    
    return 0;
}
